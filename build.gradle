buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "1.2.4"
}

apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.

version = "0.9"
group= "manila.frogmod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "frogmod"

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "1.10.2-12.18.2.2125"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20161111"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    compile 'org.nanohttpd:nanohttpd:2.2.0'
    compile 'com.mashape.unirest:unirest-java:1.4.9'
    compile ('org.jdeferred:jdeferred-core:1.2.4') {
        exclude module: 'slf4j-jdk14'
        exclude module: 'slf4j-api'
    }
}

shadowJar {
    classifier = null
    relocate "org.slf4j", "manila.reloc.org.slf4j"
}

reobf {
    shadowJar {}
}
tasks.reobfShadowJar.mustRunAfter shadowJar
reobf.jar.task.dependsOn shadowJar

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

artifacts {
    archives shadowJar
}
